model2.txt

	* model1 방식의 개발 (php)	
	 JSP <-> DB
	 
	 -> 개발속도가 빠르다
	 -> 개발 효율이 좋다(비용이 적다)
	 -> 단점 : 유지보수가 힘들다. (디자이너-개발자)
	 => 소규모 프로젝트에 효과적이다.
	 
	 
	* model2 방식 개발
	
	   View <->  Controller <-> Model 
	   (jsp)    (Servlet)   	(java)
	 -> 디자인 부분과 개발(비지니스 로직)을 완전하게 분리    
	 -> 프로젝트 규모가 크다(비용 및 시간이 증가)
	 
	 => * 일정규모 이상의 프로젝트일때만 사용
	
	* 초급 -> 중급 -> 고급
               디자인패턴 : 개발을 실행시 효율적인 개발을 위한 패턴 형태의 동작을 정리	
	
	* MVC 패턴
	=> Model View Controller를 사용한 개발 패턴 (model2 개발방식 유사)
	
	[ MVC패턴 기반의 model2 방식의 개발 ] 
	Model - 비지니스 로직 구성(java파일) -> DB관련 처리 ,Pro페이지
	     (POJO-Plain Old Java Object)
	View - 화면/디자인 페이지 구성(jsp파일) -> 화면에 출력
	Controller - 두개의 파일을 연결 구성(Servlet파일)
	
	
	
* MVC 패턴에서의 상대경로

   ./MemberJoinAction.me => 내프로젝트명/MemberJoinAction.me
   ./member/insertForm.jsp => WebContent/member/insertForm.jsp
	
	
	
	CREATE TABLE `model2`.`itwill_member` (
  `id` VARCHAR(50) NOT NULL,
  `pass` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NULL,
  `age` INT NULL,
  `gender` VARCHAR(45) NULL,
  `email` VARCHAR(200) NOT NULL,
  `reg_date` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC));
	
	
	
	
	
	
	
	
	